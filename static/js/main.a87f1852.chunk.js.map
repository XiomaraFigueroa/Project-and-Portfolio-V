{"version":3,"sources":["components/barChart/BarChart.js","logo/covid19_Logo.png","components/header/Header.js","components/nav/CountryNav.js","components/footer/Footer.js","components/card/InfoCard.js","pages/GlobalMap.js","components/nav/StateNav.js","pages/USMap.js","components/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["BarChart","this","drawChart","ctx","document","getElementById","Chart","type","data","labels","props","datasets","label","backgroundColor","borderColor","borderWidth","className","style","styles","chart","id","width","height","Component","marginBottom","Header","Navbar","expand","header","Brand","title","src","logo","alt","Dropdown","Toggle","variant","toggle","content","icon","Menu","menu","Item","as","Link","to","item","option","marginRight","display","justifyContent","color","fontFamily","fontSize","border","textDecoration","verticalAlign","marginLeft","alignItems","CountryNav","ListGroup","action","onClick","alert","country","population","updated","todayCases","todayDeaths","todayRecovered","active","list","strongText","cases","countryInfo","img","postition","Footer","footer","div","InfoCard","Card","card","Body","Title","cardTitle","world","Text","deaths","recovered","tests","critical","textAlign","borderRadius","margin","GlobalMap","state","chart_data","countries","isLoaded","covid_world","fetchData","fetchAll","fetchDataForBar","console","log","setState","fetch","then","response","json","catch","error","parsedJSON","map","flag","Container","fluid","container","h1","Row","mainSection","Col","xs","order","md","lg","xl","h2","listSection","length","i","toUpperCase","chartSection","Object","keys","forEach","key","push","shift","infoSection","overflow","alignContent","marginTop","position","flexWrap","StateNav","USMap","states","timeline","Routes","exact","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a87f1852.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport Chart from 'chart.js';\n\n\nclass BarChart extends Component {\n\n  \n    componentDidMount() {\n      this.drawChart();\n    \n    }\n    drawChart(){\n      const ctx = document.getElementById(\"myChart\");\n      \n     \n      new Chart(ctx, {\n        type: \"bar\",\n        data: {\n          labels: this.props.labels ,\n          datasets: [\n            {\n              label: \"Cases From The Last 7 Days \",\n              data: this.props.data, \n              backgroundColor: [\n                \"#1A936F\",\n                \"#1A936F\",\n                \"#1A936F\",\n                \"#1A936F\",\n                \"#1A936F\",\n                \"#1A936F\",\n                \"#1A936F\"\n              ],\n              borderColor: [\"#1A936F\", \"#1A936F\", \"#1A936F\", \"#1A936F\", \"#1A936F\", \"#1A936F\", \"#1A936F\"],\n              borderWidth: 1\n            }\n          ]\n        }\n      });\n    }\n      \n    \n          \n    render(){\n      return (\n      <div className=\"chart\" style={styles.chart} > \n        <canvas id=\"myChart\" width={this.props.width} height={this.props.height}  />\n      </div>\n      \n      )\n    }\n  }\n      \n  export default BarChart;\n\n  const styles ={\n    chart: {\n      backgroundColor: '#212121',\n      marginBottom: '4rem',\n      width:'95%'\n    }\n  }\n\n ","export default __webpack_public_path__ + \"static/media/covid19_Logo.17020e45.png\";","import React from 'react';\nimport logo from '../../logo/covid19_Logo.png';\nimport {FaChevronCircleDown} from 'react-icons/fa'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport { Link } from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar';\n\n\nconst Header = props => {\n    \n    return(\n        \n        <Navbar  expand=\"lg\" style={styles.header} >  \n            <Navbar.Brand style={styles.title} >\n                <img src={logo} alt='Covid-19 Logo' style={styles.logo} />\n                COVID-19 Dashboard\n            </Navbar.Brand>\n            <Dropdown>\n               <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" style={styles.toggle} >\n                    <div style={styles.content} >\n                        {props.title} <FaChevronCircleDown style={styles.icon} />\n                    </div>\n               </Dropdown.Toggle>\n\n                <Dropdown.Menu style={styles.menu} > \n                    <Dropdown.Item as={Link} to={props.to} style={styles.item}>{props.option} </Dropdown.Item> \n                    \n             </Dropdown.Menu></Dropdown>\n      </Navbar>\n      \n    )\n    \n}\nexport default Header;\n\nconst styles ={\n    logo: {\n        width: '3rem',\n        height: '3rem',\n        marginRight: '1rem'\n    },\n    header: {\n        display:'flex',\n        justifyContent:'space-between',\n        backgroundColor: '#212121',\n       \n    },\n    \n    title: {\n        color: '#fff',\n        fontFamily: 'Roboto, san-serif'\n    },\n    \n    toggle: {\n        width: '10rem',\n        backgroundColor: '#212121',\n        height: '3.5rem',\n        fontSize: '1.25rem',\n        color: '#fea82f',\n        border: 'none',\n        \n       \n    },\n    menu:{\n        backgroundColor: '#212121',\n        width: '10rem',\n        height: '3.5rem',\n    },\n    item: {\n       textDecoration: 'none',\n       color: '#fea82f',\n       fontSize: '1.25rem',\n       verticalAlign: 'middle',\n       fontFamily: 'Roboto, san-serif',\n      \n    },\n    icon: {\n        color: '#535353',\n        marginLeft: '1rem'\n        \n    },\n    content: {\n        display: 'flex',\n        alignItems: 'center',\n       justifyContent: 'space-between'\n    }\n   \n}","import React from 'react'\nimport ListGroup from 'react-bootstrap/ListGroup'\n\n\n\n\nconst CountryNav = props => {\n\n    function alertClicked() {\n        alert('Country: '+ [props.country] + '\\n\\n' +\n        'Population: ' + [props.population] + '\\n' + \n        'Updated: ' + [props.updated] + '\\n' + \n        'Today Cases: ' + [props.todayCases] + '\\n' +\n        'Today Deaths: ' + [props.todayDeaths] + '\\n' +\n        'Today Recovered: ' + [props.todayRecovered] + '\\n' +\n        'Active : ' + [props.active] \n        );\n        \n    }\n      \n    return(\n\n        \n        <ListGroup.Item action onClick={alertClicked} key={props.id} style={styles.list}>\n            <div><strong style={styles.strongText}>{props.cases}</strong> {props.country}</div> \n            <img src={props.countryInfo} alt={'Country Flag'} style={styles.img} />\n        </ListGroup.Item>\n       \n     \n        \n\n    )\n}\nexport default CountryNav;\n\nconst styles = { \n    \n    list: {\n        postition: 'relative',\n        display: 'flex',\n        justifyContent: 'space-between',\n        height: '3rem',\n        backgroundColor: '#212121',\n        color: '#fff',\n        alignItems: 'center',\n        border: '1px solid #000',\n        fontFamily: 'Roboto, san-serif',\n    },\n    img: {\n        width: '4rem',\n        height: '2rem',\n        marginRight: '1rem'\n    },\n    strongText: {\n        color: 'red',\n        marginLeft: '1rem',\n        marginRight: '1rem'\n    }\n}","import React from 'react';\n\nconst Footer = props =>{\n    return(\n\n    <footer style={styles.footer} key={props.id}>\n        <div style={styles.div} >\n            <p>Designed and Developed by Xiomara Figueroa</p>\n        </div>\n        \n    </footer>\n\n    )\n}\nexport default Footer;\n\nconst styles ={\n    footer: {\n        backgroundColor: '#212121',  \n    },\n    div: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        color: '#fff',\n        fontFamily: 'Open Sans, san-serif',\n        \n    }\n}","import React from 'react';\nimport Card from 'react-bootstrap/Card'\n\nconst InfoCard = props => {\n    return(\n        <>\n        <Card style={styles.card}  key={props.id} >\n            <Card.Body >\n                <Card.Title style={styles.cardTitle}>{props.world.todayCases}</Card.Title>\n                <Card.Text>Today Cases</Card.Text> \n            </Card.Body>\n        </Card>\n        <Card style={styles.card}  key={props.id} >\n            <Card.Body >\n                <Card.Title style={styles.cardTitle}>{props.world.deaths}</Card.Title>\n                <Card.Text>Today Deaths</Card.Text> \n            </Card.Body>\n        </Card>\n        <Card style={styles.card}  key={props.id} >\n            <Card.Body >\n                <Card.Title style={styles.cardTitle}>{props.world.recovered}</Card.Title>\n                <Card.Text>Today Recovered</Card.Text> \n            </Card.Body>\n        </Card>\n        <Card style={styles.card}  key={props.id} >\n            <Card.Body >\n                <Card.Title style={styles.cardTitle}>{props.world.tests}</Card.Title>\n                <Card.Text>Tests</Card.Text> \n            </Card.Body>\n        </Card>\n        <Card style={styles.card}  key={props.id} >\n            <Card.Body >\n                <Card.Title style={styles.cardTitle}>{props.world.active}</Card.Title>\n                <Card.Text>Active</Card.Text> \n            </Card.Body>\n            </Card>\n        <Card style={styles.card}  key={props.id} >\n            <Card.Body >\n                <Card.Title style={styles.cardTitle}>{props.world.critical}</Card.Title>\n                <Card.Text>Critical</Card.Text> \n            </Card.Body>\n        </Card>\n        </>\n    )\n}\nexport default InfoCard;\n\nconst styles ={\n     card: {\n        width: '20rem',\n        height: '7rem',\n        textAlign: 'center',\n        borderRadius: '10px',\n        backgroundColor: '#212121', \n        color: '#fff',\n        fontFamily: 'Open Sans, san-serif',\n        margin: '1rem'\n    },\n    cardTitle:{\n        color: '#FEA82F',\n        fontSize: '2.5rem',\n        fontFamily: 'Roboto, san-serif'\n    }\n    \n}","import React, {Component} from 'react';\nimport BarChart from '../components/barChart/BarChart';\nimport Header from '../components/header/Header';\nimport CountryNav from '../components/nav/CountryNav';\nimport Footer from '../components/footer/Footer';\nimport InfoCard from '../components/card/InfoCard';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nclass GlobalMap extends Component{\n  state = {\n    chart_data: [],\n    labels: [],\n    data: [],\n    id: [],\n    width: 1050,\n    height: 450,\n    countries: [],\n    isLoaded: true,\n    title: 'Global Map',\n    to: '/USMap',\n    option: 'US Map',\n    covid_world:[],\n  }\n  // Loads the page.\n  componentDidMount(){\n    const isLoaded = this.state.isLoaded;\n    if(isLoaded){\n        this.fetchData();\n        this.fetchAll();\n        this.fetchDataForBar();\n        \n    } else {\n        console.log(`Error.Try again.`)\n    }      \n  }\n\n // Fetches the data for the barchart.\n fetchDataForBar(){ \n\n  this.setState({\n    chart_data:[],\n    \n  })\n   // Fetch 7 day history for all countries\n  fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=7')\n  .then(response => response.json())\n  .then(data => {\n\n    this.setState(\n        {\n           chart_data: data.cases\n        }\n    )\n  })\n  .catch(error => console.log('parsing failed', error))\n  \n}\n\n  // Api for Cards\n  fetchAll(){\n    this.setState({\n      covid_world:[],\n      \n    })\n     // Fetch world\n     fetch('https://disease.sh/v3/covid-19/all')\n     .then(response => response.json())\n     .then(data => {\n         this.setState(\n             {\n                 covid_world : data\n             }\n         )\n    })\n    .catch(error => console.log('parsing failed', error))\n\n    \n  }\n\n\n  // Fetches the data.\n  fetchData(){\n\n    this.setState({\n      isLoaded: true,\n      countries:[],\n      \n    })\n\n      // Fetches the countries from the Api\n      fetch('https://disease.sh/v3/covid-19/countries')\n      .then(response => response.json())\n      .then(parsedJSON => parsedJSON.map(countries =>({\n          cases: `${countries.cases}`,\n          country: `${countries.country}`,\n          countryInfo: `${countries.countryInfo.flag}`,\n          \n          population: `${countries.population}`,\n          updated: `${countries.updated}`,\n          todayCases: `${countries.todayCases}`,\n          todayDeaths: `${countries.todayDeaths}`,\n          todayRecovered: `${countries.todayRecovered}`,\n          active: `${countries.active}`,\n          \n      })))\n      .then(countries => this.setState({\n        countries, \n        isLoaded:false\n      }))\n        \n      .catch(error => console.log('parsing failed', error))\n  }\n\n  \n  \n \n  render(){\n    const {countries, chart_data, labels, data, id, isLoaded} = this.state;\n    \n    return(\n      <Container fluid className='main' style={styles.container} >\n        <Header title={this.state.title} option={this.state.option} to={this.state.to}  />\n\n        <h1 style={styles.h1} >Cases From The Last 7 Days</h1>\n\n        <Row className='mainSection' style={styles.mainSection} >\n            <Col xs={{order: 'last'}}  md={{order: 'last'}} lg={{order: 'last'}} xl={{order: 'first'}} className='listSection' style={styles.list} >\n\n                <h2 style={styles.h2} >Cases by Country</h2>\n            \n                <section style={styles.listSection}>\n                \n                  {\n                    !isLoaded && countries.length > 0 ? countries.map((countries, i) => {\n                    const {country, countryInfo,  cases, population, updated, todayCases, todayDeaths, todayRecovered, active} = countries;\n                    return <CountryNav  key={i} cases={cases} country={country.toUpperCase()} countryInfo={countryInfo}\n                    population={population} updated={updated} todayCases={todayCases}  todayDeaths={todayDeaths} todayRecovered={todayRecovered}\n                    active={active} />  \n                    }) : null\n                  } \n\n                </section>\n               \n            </Col>\n            <Col xs={12}  md={12} xl={8} >\n            <section className='chartSection' style={styles.chartSection} >\n\n                  {\n                    Object.keys(chart_data).forEach((key, i) =>{\n\n                      labels.push(key)\n                      if (labels.length > 7)\n                       labels.shift();\n                      data.push(chart_data[key])\n\n                      id.push(i)\n                      \n                    \n                    })\n                    \n                  }\n\n                <BarChart key={id} labels={labels} data={data} width={this.state.width} height={this.state.height} />\n            \n           \n\n              <section className='infoSection' style={styles.infoSection}> \n                <InfoCard world={this.state.covid_world} />\n              </section>\n\n            </section>\n            </Col>\n        </Row>\n        \n        \n        \n                \n        <Footer />\n      </Container>\n\n        \n    );\n  }\n\n}\nexport default GlobalMap;\n\n\nconst styles ={\n  \n  container: {\n    backgroundColor: '#000',\n\n  },\n \n  list: {\n    border: '2px solid #212121',\n  },\n  listSection: {\n    overflow: 'scroll',\n    height: '48rem',\n    alignContent: 'center',\n  },\n  h1: {\n    textAlign: 'center',\n    color: '#fff',\n    marginTop: '2rem',\n    fontSize: '2rem',\n    fontFamily: 'Roboto, san-serif'\n  },\n  h2:{\n    color: '#fff',\n    marginTop: '2rem',\n    fontFamily: 'Roboto, san-serif',\n    textAlign: 'center'\n  },\n  \n  chartSection: {\n    position: 'relative',\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    width: '100%',\n    marginTop: '1rem'\n  },\n  \n  infoSection: {\n    position: 'relative',\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    width: '100%'\n  }\n  \n \n  \n}","import React from 'react'\nimport ListGroup from 'react-bootstrap/ListGroup'\n\nconst StateNav = props => {\n\n    function alertClicked() {\n        alert('State: '+ [props.state] + '\\n\\n' +\n        'Population: ' + [props.population] + '\\n' + \n        'Updated: ' + [props.updated] + '\\n' + \n        'Today Cases: ' + [props.todayCases] + '\\n' +\n        'Today Deaths: ' + [props.todayDeaths] + '\\n' +\n        'Recovered: ' + [props.recovered] + '\\n' +\n        'Active : ' + [props.active] \n        );\n        \n    }\n\n    return(\n\n        <ListGroup.Item action onClick={alertClicked} key={props.id} style={styles.list}>\n            <div><strong style={styles.strongText}>{props.cases}</strong> {props.state}</div> \n        </ListGroup.Item>\n       \n     \n        \n\n    )\n}\nexport default StateNav;\n\nconst styles = { \n    \n    \n    list: {\n        postition: 'relative',\n        display: 'flex',\n        justifyContent: 'space-between',\n        height: '3rem',\n        backgroundColor: '#212121',\n        color: '#fff',\n        alignItems: 'center',\n        border: '1px solid #000',\n        fontFamily: 'Roboto, san-serif',\n    },\n    strongText: {\n        color: 'red',\n        marginLeft: '1rem',\n        marginRight: '1rem'\n    }\n}","import React, {Component} from 'react';\nimport BarChart from '../components/barChart/BarChart';\nimport Header from '../components/header/Header';\nimport StateNav from '../components/nav/StateNav'\nimport Footer from '../components/footer/Footer'\nimport InfoCard from '../components/card/InfoCard';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\n\nclass USMap extends Component{\n  state = {\n    chart_data: [],\n    labels: [],\n    data: [],\n    id: [],\n    width: 1050,\n    height: 450,\n    states: [],\n    isLoaded: true,\n    title: 'US Map',\n    to: '/GlobalMap',\n    option: 'Global Map',\n    covid_world: []\n  }\n  // Loads the page.\n  componentDidMount(){\n    const isLoaded = this.state.isLoaded;\n    if(isLoaded){\n        this.fetchData();\n        this.fetchAll();\n        this.fetchDataForBar();\n    } else {\n        console.log(`Error.Try again.`)\n    }      \n  }\n\n  // Fetches the data for the barchart.\n fetchDataForBar(){ \n\n  this.setState({\n    chart_data:[],\n    \n  })\n   // Fetch 7 day history for all states\n  fetch('https://disease.sh/v3/covid-19/historical/usa?lastdays=7')\n  .then(response => response.json())\n  .then(data => {\n\n    this.setState(\n        {\n           chart_data: data.timeline.cases\n        }\n    )\n  })\n  .catch(error => console.log('parsing failed', error))\n  \n}\n\n  // Fetches the data for all the US\n  fetchAll(){\n    this.setState({\n      covid_world:[],\n      \n    })\n     \n     fetch('https://disease.sh/v3/covid-19/countries/United%20States?strict=true')\n     .then(response => response.json())\n     .then(data => (\n         this.setState(\n             {\n                 covid_world : data\n             }\n         )\n     ))\n    .catch(error => console.log('parsing failed', error))\n\n    \n  }\n\n  // Fetches the data for the infor card and alert.\n  fetchData(){\n\n    this.setState({\n      isLoaded: true,\n      states:[]\n    })\n\n\n    // Fetches the states from the Api\n    fetch('https://disease.sh/v3/covid-19/states')\n    .then(response => response.json())\n    .then(parsedJSON => parsedJSON.map(states =>({\n        cases: `${states.cases}`,\n        state: `${states.state}`,\n\n        population: `${states.population}`,\n        updated: `${states.updated}`,\n        todayCases: `${states.todayCases}`,\n        todayDeaths: `${states.todayDeaths}`,\n        recovered: `${states.recovered}`,\n        active: `${states.active}`,\n      }\n    )))\n    .then(states => this.setState({\n      states, \n      isLoaded:false\n    }))\n    .catch(error => console.log('parsing failed', error))\n \n  }\n    \n  render(){\n    const {states, chart_data, labels, data, id, isLoaded} = this.state;\n\n    return(\n      <Container fluid className='main' style={styles.container} >\n        <Header title={this.state.title} option={this.state.option} to={this.state.to}  />\n\n        <h1 style={styles.h1} >Cases From The Last 7 Days</h1>\n\n        \n        <Row className='mainSection' style={styles.mainSection} >\n\n            <Col xs={{order: 'last'}} md={{order: 'last'}} lg={{order: 'last'}} xl={{order: 'first'}} style={styles.list}  >\n                <h2 style={styles.h2} >Top 50 Confirmed Cases by County</h2>\n            \n               \n                <section style={styles.listSection}>\n                  {\n                      !isLoaded && states.length > 0 ? states.map((states, i) => {\n                      const {state,  cases, population, updated, todayCases, todayDeaths,recovered, active } = states;\n                      return <StateNav style={styles.list} key={i} cases={cases} state={state.toUpperCase()} \n                      population={population} updated={updated} todayCases={todayCases}  todayDeaths={todayDeaths} recovered={recovered}\n                      active={active} />\n                      }) : null\n                  } \n                </section>\n           </Col>\n            <Col xs={12}  md={12} xl={8}>\n\n              <section className='chartSection' style={styles.chartSection} >\n\n                {\n                  Object.keys(chart_data).forEach((key, i) =>{\n\n                    labels.push(key)\n                    if (labels.length > 7)\n                      labels.shift();\n                    data.push(chart_data[key])\n\n                    id.push(i)\n\n                  })\n                    \n                }\n\n                <BarChart key={id} labels={labels} data={data} width={this.state.width} height={this.state.height} />\n                \n                <section className='infoSection' style={styles.infoSection}> \n                  <InfoCard world={this.state.covid_world} />\n                </section>\n              \n              </section>\n            </Col>\n        </Row>\n        \n\n        <Footer />\n       \n      </Container>\n         \n    );\n  }\n\n}\nexport default USMap;\n\nconst styles ={\n  container: {\n    backgroundColor: '#000',\n\n  },\n \n  list: {\n    border: '2px solid #212121',\n  },\n  listSection: {\n    overflow: 'scroll',\n    height: '48rem',\n    alignContent: 'center',\n  },\n  h1: {\n    textAlign: 'center',\n    color: '#fff',\n    marginTop: '2rem',\n    fontSize: '2rem',\n    fontFamily: 'Roboto, san-serif'\n  },\n  h2:{\n    color: '#fff',\n    marginTop: '2rem',\n    fontFamily: 'Roboto, san-serif',\n    textAlign: 'center'\n  },\n  \n  chartSection: {\n    position: 'relative',\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    width: '100%',\n    marginTop: '1rem'\n  },\n  \n  infoSection: {\n    position: 'relative',\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    width: '100%'\n  }\n  \n \n  \n}","import React, {Component} from 'react';\nimport GlobalMap from '../pages/GlobalMap'\nimport USMap from '../pages/USMap'\n\n//React Router\nimport { Route, Switch } from 'react-router-dom';\n\nclass Routes extends Component{\n    render(){\n        return(\n            <section className=\"conten main-content\">\n                <Switch>\n                    <Route exact path='/' component={GlobalMap} />\n                    <Route exact path='/GlobalMap' component={GlobalMap} />\n                    <Route exact path='/USMap' component={USMap} />\n\n                    \n                </Switch>\n            </section>\n        );\n    }\n}\nexport default Routes;","import React, {Component} from 'react'\nimport './App.css';\nimport Routes from './components/Routes';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\n//React Router\nimport {\n  HashRouter as Router,\n} from 'react-router-dom'\n\n\nclass App extends Component {\n \n  \n\n  render(){\n  \n    \n    return (\n\n      \n      <Router>\n       \n        <Routes />\n      </Router>\n\n\n    );\n  }\n}\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}